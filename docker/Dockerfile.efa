ARG BASE_IMAGE=nvidia/cuda:12.3.2-devel-ubuntu22.04
FROM ${BASE_IMAGE}
ARG PY_VER=3.13

# Non-interactive APT
ENV DEBIAN_FRONTEND=noninteractive

# ---------------------------------------------------------------------------
# Basic build & runtime dependencies (minus CUDA which is already in base)
# ---------------------------------------------------------------------------
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        build-essential cmake git ninja-build g++ make patchelf \
        rdma-core libibverbs-dev \
        libgoogle-glog-dev libgflags-dev libgtest-dev libelf-dev \
        libnuma-dev libdrm-dev libdrm-amdgpu1 \
        pkg-config zlib1g-dev curl && \
\
# ───── Add Python ${PY_VER} PPA & install Python ${PY_VER} + setuptools ─────
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python${PY_VER} python${PY_VER}-dev python${PY_VER}-venv python3-setuptools && \
\
# ───── Bootstrap pip for Python ${PY_VER} ─────
    curl -sS https://bootstrap.pypa.io/get-pip.py | python${PY_VER} && \
    ln -sf /usr/bin/pip${PY_VER} /usr/local/bin/pip && \
    ln -sf /usr/bin/python${PY_VER} /usr/local/bin/python${PY_VER} && \
\
# ───── Clean up apt cache ─────
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install dependencies
RUN apt-get update && apt-get install -y \
    environment-modules pciutils tcl tcl-dev libtcl8.6 \
    curl gnupg2 software-properties-common \
    build-essential libevent-dev libhwloc-dev \
    libevent-2.1-7 libhwloc15

# Symlink to expected names
RUN ln -s /usr/lib/x86_64-linux-gnu/libevent_core-2.1.so.7 /usr/lib/x86_64-linux-gnu/libevent-core-2.1-7.so && \
    ln -s /usr/lib/x86_64-linux-gnu/libevent_pthreads-2.1.so.7 /usr/lib/x86_64-linux-gnu/libevent-pthreads-2.1-7.so && \
    ln -s /usr/lib/x86_64-linux-gnu/libhwloc.so.15 /usr/lib/x86_64-linux-gnu/libhwloc15.so

# Install EFA installer (without kernel driver)
ARG EFA_VER=1.42.0
RUN curl -O https://efa-installer.amazonaws.com/aws-efa-installer-${EFA_VER}.tar.gz && \
    tar -xf aws-efa-installer-${EFA_VER}.tar.gz && \
    cd aws-efa-installer && \
    ./efa_installer.sh -y --skip-kmod -g --no-verify --minimal && \
    cd .. && rm -rf aws-efa-installer*

    # Set path to EFA libraries
ENV LD_LIBRARY_PATH=/opt/amazon/efa/lib64:$LD_LIBRARY_PATH

# Verify libfabric installation
RUN fi_info -p efa || true

# ─────────────────────────────────────────────────────────
# Install Python build back-end (for Python ${PY_VER})
# ─────────────────────────────────────────────────────────
RUN python${PY_VER} -m pip install --no-cache-dir build auditwheel pybind11

# ───── Set Python ${PY_VER} as default python3 and python3-config ─────
RUN ln -sf /usr/bin/python${PY_VER} /usr/local/bin/python3 && \
    ln -sf /usr/bin/python${PY_VER}-config /usr/local/bin/python3-config
    
WORKDIR /io

CMD ["bash"] 