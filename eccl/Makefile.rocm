# --------------------------
# Compiler and environment
# --------------------------
HIP_HOME ?= /opt/rocm
HIP_LIB  := $(HIP_HOME)/lib
override CXX := /usr/bin/g++
HIPCC      := $(HIP_HOME)/bin/hipcc
CONDA_LIB_HOME ?= /usr/lib

# --------------------------
# Compilation flags
# --------------------------
CXXFLAGS   := -O0 -std=c++17 -Wall -Wno-unused-function -pthread -D__HIP_PLATFORM_AMD__ -I${CONDA_LIB_HOME}/../include
HIPCCFLAGS := -g -O0 -std=c++17 -D__HIP_PLATFORM_AMD__ --offload-arch=gfx942

LDFLAGS    := -L${CONDA_LIB_HOME} -lgflags -lgtest -lz -lelf -libverbs -lnl-3 -lnl-route-3 -lpthread -lglog

# --------------------------
# Include directories
# --------------------------
INCLUDES := -Iinclude -I$(HIP_HOME)/include -I/usr/include -I../include

# --------------------------
# Redis
# --------------------------
REDIS_PKGCONFIG := pkg-config
REDIS_CFLAGS    := $(shell $(REDIS_PKGCONFIG) --cflags hiredis)
REDIS_LIBS      := $(shell $(REDIS_PKGCONFIG) --libs hiredis)

CXXFLAGS += $(REDIS_CFLAGS)
LDFLAGS  += -L$(HIP_LIB) -Wl,-rpath,$(HIP_LIB) $(REDIS_LIBS)

# --------------------------
# Source files (recursive)
# --------------------------
SRC_CPP := $(shell find src -name '*.cc')
SRC_CU  := $(shell find src -name '*.cu')

# Test sources
TEST_DIR := tests
SRC_TEST := $(shell find $(TEST_DIR) -name 'test_*.cc')

# Object files
OBJ_CC   := $(SRC_CPP:.cc=.o)
OBJ_CU   := $(SRC_CU:.cu=.o)
OBJ_TEST := $(SRC_TEST:.cc=.o)

# Targets
TARGET_TEST := test_main

# --------------------------
# Default target
# --------------------------
all: $(TARGET_TEST)

# --------------------------
# Compilation rules
# --------------------------
%.o: %.cc
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -c $< -o $@

%.o: %.cu
	$(HIPCC) $(HIPCCFLAGS) $(INCLUDES) -MMD -MP -c $< -o $@

libeccl.a: $(OBJ_CC)
	ar rcs $@ $^

# --------------------------
# Linking rules
# --------------------------
$(TARGET_TEST): $(OBJ_TEST) libeccl.a
	$(HIPCC) $(HIPCCFLAGS) $(INCLUDES) $(OBJ_TEST) libeccl.a -lamdhip64 $(LDFLAGS) -o $@

# --------------------------
# Run tests
# --------------------------
run_test: $(TARGET_TEST)
	./$(TARGET_TEST)

# --------------------------
# Clean rule
# --------------------------
clean:
	rm -f $(OBJ_CC) $(OBJ_CU) $(OBJ_TEST) $(TARGET_TEST) *.d src/*.d tests/*.d

# --------------------------
# Include dependencies
# --------------------------
-include $(OBJ_CC:.o=.d) $(OBJ_CU:.o=.d) $(OBJ_TEST:.o=.d)

.PHONY: all clean run_test
